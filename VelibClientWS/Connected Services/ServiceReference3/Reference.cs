//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VelibClientWS.ServiceReference3 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference3.IStationService", CallbackContract=typeof(VelibClientWS.ServiceReference3.IStationServiceCallback))]
    public interface IStationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStationService/getInfos", ReplyAction="http://tempuri.org/IStationService/getInfosResponse")]
        void getInfos(int time, string city, string station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStationService/getInfos", ReplyAction="http://tempuri.org/IStationService/getInfosResponse")]
        System.Threading.Tasks.Task getInfosAsync(int time, string city, string station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStationService/SubscribeStationEvent", ReplyAction="http://tempuri.org/IStationService/SubscribeStationEventResponse")]
        void SubscribeStationEvent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStationService/SubscribeStationEvent", ReplyAction="http://tempuri.org/IStationService/SubscribeStationEventResponse")]
        System.Threading.Tasks.Task SubscribeStationEventAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStationService/SubscribeStationFinishedEvent", ReplyAction="http://tempuri.org/IStationService/SubscribeStationFinishedEventResponse")]
        void SubscribeStationFinishedEvent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStationService/SubscribeStationFinishedEvent", ReplyAction="http://tempuri.org/IStationService/SubscribeStationFinishedEventResponse")]
        System.Threading.Tasks.Task SubscribeStationFinishedEventAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStationServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStationService/Station")]
        void Station(int time, string city, [System.ServiceModel.MessageParameterAttribute(Name="station")] string station1, string result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IStationService/StationFinished")]
        void StationFinished();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStationServiceChannel : VelibClientWS.ServiceReference3.IStationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StationServiceClient : System.ServiceModel.DuplexClientBase<VelibClientWS.ServiceReference3.IStationService>, VelibClientWS.ServiceReference3.IStationService {
        
        public StationServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public StationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public StationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public StationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public StationServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void getInfos(int time, string city, string station) {
            base.Channel.getInfos(time, city, station);
        }
        
        public System.Threading.Tasks.Task getInfosAsync(int time, string city, string station) {
            return base.Channel.getInfosAsync(time, city, station);
        }
        
        public void SubscribeStationEvent() {
            base.Channel.SubscribeStationEvent();
        }
        
        public System.Threading.Tasks.Task SubscribeStationEventAsync() {
            return base.Channel.SubscribeStationEventAsync();
        }
        
        public void SubscribeStationFinishedEvent() {
            base.Channel.SubscribeStationFinishedEvent();
        }
        
        public System.Threading.Tasks.Task SubscribeStationFinishedEventAsync() {
            return base.Channel.SubscribeStationFinishedEventAsync();
        }
    }
}
